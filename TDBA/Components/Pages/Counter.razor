@page "/counter"
@using TDBA.Data
@using TDBA.Services
@rendermode InteractiveServer
@using Microsoft.EntityFrameworkCore
@inject WeatherService WeatherService
@inject EventService EventService

<PageTitle>Event Suggestions</PageTitle>

@if (RandomEvent is not null)
{
    <p><strong>Event:</strong> @RandomEvent.Name</p>
    <p><strong>Age Group:</strong> @RandomEvent.AgeGroup</p>
    <p><strong>Price Range:</strong> @RandomEvent.PriceRange</p>
    <p><strong>Type:</strong> @(RandomEvent.IsIndoor ? "Indoor" : "Outdoor")</p>
}
else
{
    <p>No events available based on the current weather.</p>
}

<button @onclick="GetRandomEvent">Fun Suggestions</button>

@code {
    private List<EventModel> FilteredEvents = new();
    private EventModel? RandomEvent;
    private Random random = new();

    private WeatherData? weatherData;
    private string weatherCondition = "Unknown";
    private double temperatureF;

    protected override async Task OnInitializedAsync()
    {
        // Gets weather
        weatherData = await WeatherService.GetCurrentWeather();

        if (weatherData != null)
        {
            weatherCondition = weatherData.Weather?[0].Main ?? "Unknown";
            temperatureF = weatherData.Main?.Temp ?? 0;
        }

        // Gets all events
        var allEvents = await EventService.GetAllEventsAsync();

        // Filter for weather. tested accuacy by changing the min degree to 80, which worked so I changed it to 50 degrees or less
        if (weatherCondition == "Rain" || weatherCondition == "Snow" || temperatureF < 50)
        {
            FilteredEvents = allEvents.Where(e => e.IsIndoor).ToList();
        }
        else
        {
            FilteredEvents = allEvents;
        }

        // Pick one at startup
        GetRandomEvent();
    }

    private void GetRandomEvent()
    {
        if (FilteredEvents.Any())
        {
            int index = random.Next(FilteredEvents.Count);
            RandomEvent = FilteredEvents[index];
        }
    }
}
